// `@content`用在`mixin`里面的，当定义一个`mixin`后，并且设置了`@content`；
// `@include`的时候可以传入相应的内容到`mixin`里面
// 官网给的例子：
// $color: white
// @mixin colors($color: blue) {
//   background-color: $color
//   @content
//   border-color: $color
// }
// .colors {
//   @include colors { color: $color }
// }
// 编译后：
// .colors {
//   background-color: blue
//   color: white
//   border-color: blue
// }
@mixin sp-layout
  @media screen and (max-width: 750px)
    @content
  

body 
  display: flex
  justify-content: center
  align-items: center
  min-height: 100vh
  background: radial-gradient(ellipse at bottom, #2c314e 0%, #03080e 100%)
  overflow: hidden
    
.stars
  position: fixed
  top: 0
  left: 0
  width: 100%
  height: 130%
  transform: rotate(-45deg)
  // border: 1px solid #fff

  @function random_range($min, $max)
    @return $min + floor(random()*(($max - $min) + 1))

  .star
    $star-count: 50
    --primary-color: #2dbdff
    // var():css3 中使用变量的函数
    --star-color: var(--primary-color)
    --star-tail-length: 6em
    --star-tail-height: 2px
    --star-width: calc(var(--star-tail-length) / 6)
    --fall-duration: 9s
    --tail-fade-duration: var(--fall-duration)

    position: absolute
    top: var(--top-offset)
    left: 0
    width: var(--star-tail-length)
    height: var(--star-tail-height)
    color: var(--star-color)
    // currentColor: css3中，继承父类颜色的变量
    background: linear-gradient(45deg, currentColor, transparent)
    border-radius: 50%
    // border: 1px solid #fff
    filter: drop-shadow(0 0 6px currentColor)
    transform: translate3d(104em, 0, 0)
    animation: fall var(--fall-duration) var(--fall-delay) linear infinite, tail-fade var(--tail-fade-duration) var(--fall-delay) ease-out infinite
    @include sp-layout
      // For mobile performance, tail-fade animation will be removed QAQ
      animation: fall var(--fall-duration) var(--fall-delay) linear infinite
    

    @for $i from 1 through $star-count 
      &:nth-child(#{$i}) 
        --star-tail-length: #{random_range(500em, 750em) / 100}
        --top-offset: #{random_range(0vh, 10000vh) / 100}
        --fall-duration: #{random_range(6000, 12000s) / 1000}
        --fall-delay: #{random_range(0, 10000s) / 1000}
    &::before, &::after 
      position: absolute
      content: ''
      top: 0
      left: calc(var(--star-width) / -2)
      width: var(--star-width)
      height: 100%
      background: linear-gradient(45deg, transparent, currentColor, transparent)
      border-radius: inherit
      animation: blink 2s linear infinite
    
    &::before 
      transform: rotate(45deg)
    
    &::after 
      transform: rotate(-45deg)
  
@keyframes fall 
  to 
    transform: translate3d(-30em, 0, 0)
  
@keyframes tail-fade 
  0%, 50% 
    width: var(--star-tail-length)
    opacity: 1
  70%, 80% 
    width: 0
    opacity: 0.4
  100% 
    width: 0
    opacity: 0
  
@keyframes blink 
  50% 
    opacity: 0.6
  

    
